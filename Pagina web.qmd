---
title: "Como usar quarto"
author: "Edwin Mondragon Herrera"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed-resources: true
    output-file: index 
---

# Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

# Como usar cuarto?

## Fuentes

-   Negrita: **esta es una fuente negrita**
-   Cursiva: *Solanum tuberosum*

## Formulas matemàticas

Este es el area de una circunferencia $Area_{c}=pi\cdot r^2$

Esta es una formula cualquiera $$\frac{\left(2x-1\right)^2-1}{4}=k$$

# Mi primera página web.

1.  Tener mi proyecto
2.  Conectar mi proyecto a GitHub
3.  Tener un archivo en formato html llamado index.html
4.  Activar GitHub pages

# Modelo lineal

## Importar data

```{r}
# Cargar librerías
library(googlesheets4)
library(tidyverse)

# URL de la hoja de Google Sheets
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit#gid=172957346"

# Leer los datos de la pestaña "fb"
fb <- range_read(url, sheet = "fb")
```

```{r}
# Modelo lineal
modelo <- lm(formula = lfa ~ block + geno + riego * geno, data = fb)

# Análisis de varianza del modelo
anova(modelo)
```

```{r}
# Cargar librerías
library(ggplot2)

# Crear un diagrama de cajas
ggplot(data = fb, aes(x = geno, y = lfa, fill = riego)) +
  geom_boxplot() +
  labs(title = "Diagrama de Cajas de lfa por geno y riego",
       x = "Genotipo (geno)",
       y = "Valor de lfa") +
  theme_minimal()


```

# Agricolae: comparación de medias

```{r}
library(agricolae)

# Análisis de varianza del modelo
anova(modelo)

# Realizar la prueba de Tukey
tukey_result <- HSD.test(modelo, tr = c("geno", "riego"), group = TRUE)

# Mostrar resultados
print(tukey_result)
plot(tukey_result)

# Manipular los resultados para separar 'geno' y 'riego'
grupos <- tukey_result$groups %>%
  rownames_to_column("tratamientos") %>%
  separate(tratamientos, into = c("geno", "riego"), sep = ":")

str(grupos)

```

```{r}
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(title = "Efecto de Geno y Riego en LFA",
       x = "Genotipo",
       y = "LFA") +
  theme_minimal() +
  scale_fill_discrete(name = "Riego") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  geom_text(aes(label = groups),  # Mostrar 'groups' como etiqueta
            position = position_dodge(width = 0.9), 
            vjust = -0.3) +  # Ajusta la posición vertical de las etiquetas
  labs(title = "Efecto de Geno y Riego en LFA",
       x = "Genotipo",
       y = "LFA") +
  theme_minimal() +
  scale_fill_discrete(name = "Riego") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```

# emmeans: comparación de medias

```{r}
# Comparacion de medias con: emmeans 
## Modelo mixto de hi
source('https://inkaverse.com/setup.r')
library(emmeans)
library(multcomp)
library(multcompView)

modelo <- lme4::lmer(lfa ~ riego * geno + (1 | bloque), data = fb)

anova(modelo)

cm1 <- emmeans(modelo , ~  geno | riego) %>% 
  cld(Letters = letters, reversed = T )
cm1

cm2 <- emmeans(modelo , ~  riego | geno) %>% 
  cld(Letters = letters, reversed = T )
cm2

cm3 <- emmeans(modelo , ~  riego * geno)%>% 
  cld(Letters = letters, reversed = T )
cm3



### Grafica 
library(ggplot2)
dtcm <- as.data.frame(cm1) %>% 
  rename(sig = ".group")

ggplot(dtcm, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = "dodge", color =
             "black") +
  geom_text(aes(label = sig, y = emmean),
            position = position_dodge(width = 0.9),
            vjust = 0) +
  labs(x = "Genotipo", y = "HI", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Gráfico de barras: HI por genotipo y riego")

```
